@use '@/styles/_variables.module' as vars;
@use '@/styles/_mixins.module' as mixins;

.services {
    text-align: center;

    &__header {
        margin-top: 172px;

        h2 {
            margin-top: 32px;
            font-size: 40px;
        }
    }

    &__content {
        margin-top: 80px;
        padding: 0 5%;

        &_calculation {
            display: flex;
            justify-content: space-between;
            flex-wrap: wrap;
            gap: 30px;

            p {
                margin-bottom: 12px;
                font-size: 24px;
            }

            &_service {
                @include mixins.flexColumn;
                align-items: flex-start;
                gap: 12px;
                width: 250px;

                label {
                    display: flex;
                    gap: 10px;
                    align-items: flex-start;
                    cursor: pointer;
                    text-align: left;
                }

                input {
                    position: relative;
                    appearance: none;
                    -webkit-appearance: none;
                    min-height: 20px;
                    min-width: 20px;
                    border-radius: 50%;
                    border: solid .4px rgba($color: vars.$primaryColor, $alpha: .4);
                    transition: .2s ease;
                    cursor: pointer;

                    &::before {
                        @include mixins.absoluteCenter;
                        content: "";
                        min-width: 10px;
                        min-height: 10px;
                        border: solid .4px rgba($color: vars.$primaryColor, $alpha: .4);
                        border-radius: 50%;
                        transition: .2s ease;
                    }

                    &::after {
                        @include mixins.absoluteCenter;
                        content: "";
                        min-width: 10px;
                        min-height: 10px;
                        transform: translate(-50%, -50%) scale(0);
                        border-radius: 50%;
                        background-color: vars.$primaryColor;
                        border: solid .4px rgba($color: vars.$primaryColor, $alpha: 1);
                        transition: .2s ease;
                    }
    
                    &:checked {
                        border: solid .4px rgba($color: vars.$primaryColor, $alpha: 1);
    
                        &::before {
                            border: solid .4px rgba($color: vars.$primaryColor, $alpha: 1);
                        }

                        &::after {
                            transform: translate(-50%, -50%) scale(1);
                        }
                    }
                }
            }

            &_section {
                @include mixins.flexColumn;
                align-items: flex-start;
                gap: 12px;
                width: 250px;

                label {
                    display: flex;
                    gap: 10px;
                    align-items: flex-start;
                    justify-content: flex-start;
                    cursor: pointer;
                    text-align: left;
                }

                input {
                    appearance: none;
                    display: grid;
                    place-content: center;
                    min-width: 20px;
                    min-height: 20px;
                    border: solid .4px rgba($color: vars.$primaryColor, $alpha: .4);
                    border-radius: 4px;
                    cursor: pointer;

                    &::before {
                        content: "";
                        min-width: 14px;
                        min-height: 14px;
                        transform: scale(0);
                        transition: .2s ease;
                        background: vars.$primaryColor;
                        background-color: CanvasText;
                        clip-path: polygon(21% 43%, 8% 52%, 35% 88%, 93% 13%, 81% 4%, 36% 62%);
                    }

                    &:checked {
                        border: solid .4px rgba($color: vars.$primaryColor, $alpha: 1);

                        &::before {
                            transform: scale(1);
                        }
                    }
                }
            }

            &_area {
                @include mixins.flexColumn;
                align-items: flex-start;
                gap: 12px;
                width: 40%;

                label {
                    position: relative;
                    width: 100%;
                }

                input {
                    margin-top: 50px;
                    appearance: none;
                    -webkit-appearance: none;
                    width: 100%;
                    height: 1px;
                    background-color:rgba($color: vars.$primaryColor, $alpha: .4);
                    border-radius: 5px;
                    cursor: pointer;
                    outline: none;
                    background-image: linear-gradient(vars.$primaryColor, vars.$primaryColor);
                    background-size: 50% 100%;
                    background-repeat: no-repeat;

                    &::-webkit-slider-thumb {
                        -webkit-appearance: none;
                        height: 15px;
                        width: 15px;
                        border-radius: 50%;
                        background: vars.$primaryColor;
                    }
                }

                div {
                    position: absolute;
                    top: 0;
                    padding: 5px 8px;
                    min-width: max-content;
                    background-color: vars.$secondaryColor;
                    box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.25);
                    border-radius: 8px;
                    font-size: 16px;
                    transform: translateX(-50%);

                    &::after {
                        content: '\00B2'
                    }
                }

                datalist {
                    margin-top: 3px;
                    display: flex;
                    justify-content: space-between;
                    width: 100%;
                }
                  
                option {
                    padding: 0;
                    font-size: 16px;

                    &::after {
                        content: '\00B2'
                    }
                }
            }
        }

        &_total {
            margin-top: 60px;
            text-align: right;

            p {
                font-size: 16px;
            }

            div {
                margin-top: 12px;
                font-size: 22px;
                font-weight: 400;
            }
        }

        &_submit {
            margin-top: 72px;

            h3 {
                font-size: vars.$primaryFontSize;
                text-align: left;
            }

            &_wrapper {
                margin-top: 28px;
                display: flex;
                gap: 20px;

                button {
                    @include mixins.button;
                    padding: 8px 16px;
                    align-self: flex-start;
    
                    &:hover {
                        @include mixins.hoveredButton;
                    }
                }
            }

            &_inputs {
                display: flex;
                flex-direction: column;
                gap: 20px;
                flex: 1;
            }

            &_info {
                display: flex;
                justify-content: space-between;
                flex-wrap: wrap;
                gap: 20px;

                input {
                    padding: 8px 16px;
                    flex: 1;
                    border: solid .4px rgba($color: vars.$primaryColor, $alpha: .4);
                    border-radius: 10px;
                    outline: none;
                    transition: .5s ease;
    
                    &:focus  {
                        background-color: rgba($color: vars.$primaryColor, $alpha: .1);
                        box-shadow: inset 0 0 0 2px rgba($color: vars.$primaryColor, $alpha: .4);
                    }
                }
            }

            textarea {
                resize: vertical;
                width: 100%;
                min-height: 150px;
                padding: 8px 16px;
                border: solid .4px rgba($color: vars.$primaryColor, $alpha: .4);
                border-radius: 10px;
                outline: none;
                transition: .5s ease;

                &:focus  {
                    background-color: rgba($color: vars.$primaryColor, $alpha: .1);
                    box-shadow: inset 0 0 0 2px rgba($color: vars.$primaryColor, $alpha: .4);
                }
                
                &:not(:focus) {
                    resize: vertical;
                }
            }
        }
    }
}